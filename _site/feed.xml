<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">文字与照片de较量</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://127.0.0.1:4000/feed.xml" />
<link rel="alternate" type="text/html" href="http://127.0.0.1:4000" />
<updated>2015-10-14T13:46:51+08:00</updated>
<id>http://127.0.0.1:4000/</id>
<author>
  <name>rushui</name>
  <uri>http://127.0.0.1:4000/</uri>
  <email>tanpf2012@email.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[JAVASCRIPT数据类型]]></title>
  <link rel="alternate" type="text/html" href="http://127.0.0.1:4000/blog/JavaScript-dataType/" />
  <id>http://127.0.0.1:4000/blog/JavaScript-dataType</id>
  <published>2015-10-14T06:55:55+08:00</published>
  <updated>2015-10-14T06:55:55+08:00</updated>
  <author>
    <name>rushui</name>
    <uri>http://127.0.0.1:4000</uri>
    <email>tanpf2012@email.com</email>
  </author>
  <content type="html">
    &lt;div&gt;
    &lt;ul&gt;
        &lt;li class=&quot;list-inline&quot;&gt;&lt;a href=&quot;#baseType&quot;&gt;基本类型&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#complexType&quot;&gt;复合类型&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#spectialType&quot;&gt;特殊对象&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;article id=&quot;baseType&quot;&gt;
        &lt;div class=&quot;article-header&quot;&gt;基本类型&lt;/div&gt;
        &lt;div class=&quot;article-content&quot;&gt;
            &lt;div class=&quot;list-item-content&quot;&gt;数字&lt;/div&gt;
                采用IEEE754标准定义的64位浮点格式
            特殊数值常量:
            &lt;table&gt;
                &lt;thead&gt;
                    &lt;tr&gt;&lt;th&gt;JS变量&lt;/th&gt;&lt;th&gt;变量解释&lt;/th&gt;&lt;/tr&gt;
                &lt;/thead&gt;
                &lt;tbody&gt;
                    &lt;tr&gt;&lt;td&gt;Infinity&lt;/td&gt;&lt;td&gt;无穷大的特殊值&lt;/td&gt;&lt;/tr&gt;
                    &lt;tr&gt;&lt;td&gt;NaN&lt;/td&gt;&lt;td&gt;非数字值&lt;/td&gt;&lt;/tr&gt;
                    &lt;tr&gt;&lt;td&gt;Number.MAX_VALUE&lt;/td&gt;&lt;td&gt;可表示的最大数字&lt;/td&gt;&lt;/tr&gt;
                    &lt;tr&gt;&lt;td&gt;Number.MIN_VALUE&lt;/td&gt;&lt;td&gt;可表示的最小数字&lt;/td&gt;&lt;/tr&gt;
                &lt;/tbody&gt;
            &lt;/table&gt;
            Number.NaN 非数字值
            Number.POSITIVE_INFINITY 正无穷大
            Number.NEGATIVE_INFINITY 负无穷大
            把数字转为字符串6种方式
            &lt;pre&gt;
                var n = 1.23456;
                var n_as_str = n+&quot;&quot;;
                String(n);
                n.toString(x); //x=2,binary; x=8, octonay; x=16,hexadecimal.if empty,decimal
                n.toFixed(x); //小数点后位数
                n.toExponential(x); //显示指数形式,x表示小数位
                n.toPrecision(x); //若n位数&amp;lt;x时显示为指数,x表示数字的精度
            &lt;/pre&gt;
            ---字符串
            字符串转为数字
            在数字环境,自动转换为数字,
            &lt;pre&gt;
                var num = &quot;2&quot; * &quot;3&quot;; //num = 6
                var num = str_val - 0;
                var num = Number(str_val); //以10为基数的数字有效,允许开头和结尾的空白
                parseInt(str)
                parseInt(str,radix) //the same with java
                parseFloat(str)
            &lt;/pre&gt;
            ---布尔
            显式转换的方法
            &lt;pre&gt;
            var x_as_boolean = Boolean(x);
            var x_as_boolean = !!x;
            &lt;/pre&gt;
            ---null
            表示&quot;无值&quot;.
            对象转换:布尔环境式时,非空对象为false;字符串环境时&quot;null&quot;;数字环境时0;
            ---undefined
            使用未声明的变量时,或使用声明但没有赋值的变量时,或使用不存在的对象属性时,返回
            undefined.
            对象转换:布尔环境式时,非空对象为false;字符串环境时&quot;undefined&quot;;数字环境时NaN;
            与null区别:
            null是关键字,undefined不是.(ECMAScript v3定义了undefined的全局变量,初始值是undefined)
        &lt;/div&gt;
    &lt;/article&gt;
    &lt;article id=&quot;complexType&quot;&gt;
        &lt;div class=&quot;article-header&quot;&gt;复合类型&lt;/div&gt;
        对象:已命名的数据的集合
        对象直接量:由一个列表构成.列表的表式形式,{key:value,*};(key=标识符/字符串,value=常量/表达式)
        对象转换:布尔环境式时,非空对象为true;字符串环境时,toString();数字环境时,valueOf();
        数组
        不直持多维数组,数组元素可以是数组;
        数组元素不必据有相同的类型
    &lt;/article&gt;
    &lt;article id=&quot;spectialType&quot;&gt;
        &lt;div class=&quot;article-header&quot;&gt;复合类型&lt;/div&gt;
        函数
        一般语法,function name( args ) { func_body; }  var function-name=function( args ){ };
        lambda函数,function ( args ){ function-body; }
        构造函数,new Function( &quot;args&quot;, &quot;function-body&quot; );

        特殊的js函数特殊的行为：
        自执行函数:常见形态  (function(){})();  变异形态 (function(){}()) || +function(){}();
        jQuery的资源加载完成回调函数:$(function(){})

    &lt;/article&gt;
    *说明
    计划以后在note目录下发布些整理的笔记,好记心不如烂笔头.主要为了方便自己查找,若读者看了觉得哪儿理解不对,请指教.
    这篇是关于javascript的数据类型,主要内容来自&quot;javascript权威指南&quot;.本文来自博客园-寒意，请转载注明出处，尊重作者原创。
&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/blog/JavaScript-dataType/&quot;&gt;JAVASCRIPT数据类型&lt;/a&gt; was originally published by rushui at &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;文字与照片de较量&lt;/a&gt; on October 14, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[同学们，好美有木有]]></title>
  <link rel="alternate" type="text/html" href="http://127.0.0.1:4000/articles/imagestransform3D/" />
  <id>http://127.0.0.1:4000/articles/imagestransform3D</id>
  <updated>2015-05-17T00:00:00-00:00</updated>
  <published>2015-05-23T00:00:00+08:00</published>
  
  <author>
    <name>rushui</name>
    <uri>http://127.0.0.1:4000</uri>
    <email>tanpf2012@email.com</email>
  </author>
  <content type="html">
    &lt;canvas id=&quot;canvas&quot; width=&quot;225&quot; height=&quot;609&quot; data-libpath=&quot;http://127.0.0.1:4000/assets/js/vendor/imageTransform3D.js&quot; data-imgspath=&quot;http://127.0.0.1:4000/images/imgs-yansa/&quot; style=&quot;cursor: move;&quot;&gt;你的浏览器不支持HTML5画布技术，请使用谷歌浏览器。&lt;/canvas&gt;
&lt;script&gt;

  window.imagestransform3D.load({
    imgdata:[
      // north
      {img:&#39;1.jpg&#39;, x:-1000, y:0, z:1500, nx:0, nz:1},
      {img:&#39;2.jpg&#39;, x:0,     y:0, z:1500, nx:0, nz:1},
      {img:&#39;3.jpg&#39;, x:1000,  y:0, z:1500, nx:0, nz:1},
      // east
      {img:&#39;4.jpg&#39;, x:1500,  y:0, z:1000, nx:-1, nz:0},
      {img:&#39;5.jpg&#39;, x:1500,  y:0, z:0, nx:-1, nz:0},
      {img:&#39;6.jpg&#39;, x:1500,  y:0, z:-1000, nx:-1, nz:0},
      // south
      {img:&#39;7.jpg&#39;, x:1000,  y:0, z:-1500, nx:0, nz:-1},
      {img:&#39;8.jpg&#39;, x:0,     y:0, z:-1500, nx:0, nz:-1},
      {img:&#39;9.jpg&#39;, x:-1000, y:0, z:-1500, nx:0, nz:-1},
      // west
      {img:&#39;10.jpg&#39;, x:-1500, y:0, z:-1000, nx:1, nz:0},
      {img:&#39;11.jpg&#39;, x:-1500, y:0, z:0, nx:1, nz:0},
      {img:&#39;12.jpg&#39;, x:-1500, y:0, z:1000, nx:1, nz:0}
    ],
    libpath:&quot;http://127.0.0.1:4000/assets/js/vendor/imageTransform3D.js&quot;,
    options:{
      imagesPath: &quot;http://127.0.0.1:4000/images/imgs/dx_091/&quot;
    }
  });
  &lt;/script&gt;


    &lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/articles/imagestransform3D/&quot;&gt;同学们，好美有木有&lt;/a&gt; was originally published by rushui at &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;文字与照片de较量&lt;/a&gt; on May 23, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[开博了，送给2015-05-17的自己]]></title>
  <link rel="alternate" type="text/html" href="http://127.0.0.1:4000/blog/start-blog/" />
  <id>http://127.0.0.1:4000/blog/start-blog</id>
  <published>2015-05-18T06:26:55+08:00</published>
  <updated>2015-05-18T06:26:55+08:00</updated>
  <author>
    <name>rushui</name>
    <uri>http://127.0.0.1:4000</uri>
    <email>tanpf2012@email.com</email>
  </author>
  <content type="html">
    &lt;div&gt;
    &lt;p&gt;终于可以安静的坐下来书写喜欢的文字了。&lt;p /&gt;

    &lt;p class=&quot;rs-none&quot;&gt;
      之所以说自己终于可以写字了，那是因为自己对于这个地方表示的非同其他de感觉（这种感觉就像你一直在用QQ空间，一直在用新浪微博，但是你也只能做一些人家想让你做的，又好比一直租房住，从这里搬到那里，再从那里搬回这里，突然有一天你有了一座自己的房子，一种突破束缚de感觉，狠自由）.
    &lt;/p&gt;
    &lt;p&gt;不久以前路过一条小河，遇到了一只有趣的小『青蛙』，偶听『青蛙』de生活：&lt;/p&gt;
    &lt;p class=&quot;rs-none&quot;&gt;这个故事自从出来之后就不知道该讲给谁，但我坚信肯定有人能听得懂这个故事：&lt;/p&gt;
    &lt;p&gt;我是从浑水潭中跳出的『青蛙』，之前的生活好平淡好无聊，每件事情都好像很复杂，自从来到这里我还没有过多少快乐，我不喜欢像生活在一只瓶子中，于世它决定要跳出水潭，虽然他对将跳出水后的世界还很不清楚，不了解即将面对de世界，甚至不了解自己，更不知道自己将何去何从。&lt;/p&gt;
    &lt;b&gt;
    &lt;pre class=&quot;rs-font-size18&quot;&gt;
            但，
          在它的小时候，
        『青蛙』爸爸妈妈de行为深深地影响着它的行为，
      影响着它的思想，不知不觉de在它心里萌生了一个信念，
    深植于自己的内心.
                                    ——  一个让自己满意的自己。
    &lt;/pre&gt;
    &lt;/b&gt;
    &lt;p&gt;它凭着自己一股勇敢，身付着蛙爸爸和蛙妈妈的期许，背上自己的行囊，坚强的出发了。&lt;/p&gt;
    &lt;p&gt;『青蛙』的眼中，它的这一次行走是坚定的，是必须的，世界那么大，而自己正年轻，正青春，多去体验缤纷多彩的生活，那才是一个更满意de自己，那才是自己喜欢的。&lt;/p&gt;

    &lt;p&gt;懵懂的『青蛙』携带者仅有的梦想，蹦着跳着就来到了一片小河边，这里水草丰富，也许他觉得这里就是他想要来的地方，但它却忽略了这里也处处充满凶险，所以它开开心心的留下来了，它的要求并不高，它只希望能追求跟满意de自己，幸运de是这里有很多自己的同类，但是他们的皮肤与自己却各有不同，毕竟自己是独一无二的，它勇敢de个性在这里又一次发挥了作用，它主动恳求加入已有的团队，这个团队的主心骨觉得她的勇敢有所感触，然而也因它也还没有拥有绝对的权利，所以留下新成员来帮自己无形中慢慢的权利被巩固，从而留下小『青蛙』还是没有太大问题de。&lt;/p&gt;
    &lt;p&gt;请等续，谢谢&lt;/p&gt;
    &lt;p class=&quot;rs-none&quot;&gt;自此小『青蛙』便开始了新的生活，小『青蛙』逐渐越来越大，每次出去他都能从其他『青蛙』那里看到很厉害的扑食侦察能力&lt;/p&gt;


&lt;/p&gt;&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/blog/start-blog/&quot;&gt;开博了，送给2015-05-17的自己&lt;/a&gt; was originally published by rushui at &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;文字与照片de较量&lt;/a&gt; on May 18, 2015.&lt;/p&gt;
  </content>
</entry>


  

<entry>
  <title type="html"><![CDATA[我的第一篇文章]]></title>
  <link rel="alternate" type="text/html" href="http://127.0.0.1:4000/articles/first-article/" />
  <id>http://127.0.0.1:4000/articles/first-article</id>
  <updated>2015-05-18T00:00:00-00:00</updated>
  <published>2015-05-18T00:00:00+08:00</published>
  
  <author>
    <name>rushui</name>
    <uri>http://127.0.0.1:4000</uri>
    <email>tanpf2012@email.com</email>
  </author>
  <content type="html">
    &lt;div class=&quot;rs-article&quot;&gt;
&lt;p&gt;欢迎大家来到我的小窝，本博第一天开张，仅有寥寥文字，以后会记录一些本人与IT行业以及自己de生活经历相关；欢迎大家来这里了解我。&lt;/p&gt;
&lt;label&gt;注意：&lt;/label&gt;&lt;i class=&quot;font-size12 notice&quot;&gt;
还请大家将本网址存于书签中，避免记住繁琐的网址，便于下次浏览.&lt;/i&gt;
 

&lt;/div&gt;

    &lt;p&gt;&lt;a href=&quot;http://127.0.0.1:4000/articles/first-article/&quot;&gt;我的第一篇文章&lt;/a&gt; was originally published by rushui at &lt;a href=&quot;http://127.0.0.1:4000&quot;&gt;文字与照片de较量&lt;/a&gt; on May 18, 2015.&lt;/p&gt;
  </content>
</entry>

</feed>